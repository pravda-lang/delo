shell = load stdlib/system/shell.py;
write = load stdlib/system/write.py;
read = load stdlib/system/read.py;
index = load stdlib/list/index.pvd;
slice = load stdlib/list/slice.pvd;
replace = load stdlib/string/replace.py;

create path = shell (list "touch" path);

build name = {
    code = read (concat name "/src/main.pvd");
    output = concat "#!/usr/bin/env pravda" new-line ";" code;

    path = (concat name "/build/" name ".pvd");
    shell (list "mkdir" (concat name "/build"));
    create path; write path output;
};

run name = {
    path = (concat "./" name "/build/" name ".pvd");
    line1 = concat "chmod +x " path;
    line2 = concat path " --args " ~(slice args (range 2 (len args)));
    shell (concat line1 ";" line2);
};

init name = {
    shell (list "mkdir" name);
    shell (list "mkdir" (concat name "/src"));

    create (concat name "/src/main.pvd");
    create (concat name "/README.md");

    write (concat name "/src/main.pvd") (concat "print " double-quote "Hello, world!" double-quote " new-line" new-line);
    write (concat name "/README.md") (concat "# " name new-line);
};

if (equal "new" (index args 0)) @{
    init (index args 1);
} @{
    if (equal "run" (index args 0)) @{
        run (index args 1);
    } @{
        if (equal "build" (index args 0)) @{
            build (index args 1);
        } @{
            print "Delo: the project manager of Pravda" new-line;
        };
    };
};
